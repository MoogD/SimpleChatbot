apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: "$rootDir/dependencies.gradle"

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {
    compileSdkVersion 29

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'] ? keystoreProperties['storeFile'] : "../../keystore.jks")
            storePassword keystoreProperties['storePassword'] ? keystoreProperties['storePassword'] : System.getenv("KEYSTORE_PASS")
            keyAlias keystoreProperties['keyAlias'] ? keystoreProperties['keyAlias'] : System.getenv("ALIAS_NAME")
            keyPassword keystoreProperties['keyPassword'] ? keystoreProperties['keyPassword'] : System.getenv("ALIAS_PASS")
        }
    }

    buildToolsVersion "29.0.1"

    defaultConfig {
        applicationId "com.example.simplechatbot"
        minSdkVersion 27
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/DEPENDENCIES'
    }

// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

}

ant.importBuild 'src\\main\\Assets\\assets.xml'
preBuild.dependsOn(list, checksum)
clean.dependsOn(clean_assets)

dependencies {
    implementation project(':pocketsphinx')
    // Google api clients
    implementation "com.google.api-client:google-api-client:$googleAPIClient"

    implementation ("com.google.auth:google-auth-library-oauth2-http:$googleOauthVersion") {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$androidxAppcomponentVersion"
    implementation "androidx.core:core-ktx:$androidxCoreVersion"
    implementation "androidx.constraintlayout:constraintlayout:$androidxConstraintVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$androidxLifecycleVersion"
    implementation "com.google.android.material:material:$androidMaterialVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // Unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "androidx.arch.core:core-testing:$androidxArchCoreTestingVersion"
    testImplementation "androidx.test:runner:$androidxTestVersion"

    // Android tests
    androidTestImplementation "androidx.test.ext:junit:$androidxTestVersion"
    androidTestImplementation "androidx.test:core:$androidxTestCoreVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxTestEspressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$androidxTestEspressoVersion"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$uiAutomatorVersion"

    implementation "com.jakewharton.timber:timber:$timberVersion"

    implementation "com.google.api-client:google-api-client:$googleAPIClient"
    implementation "com.google.android.gms:play-services-auth:$googlePlayServicesVersion"
    implementation "com.google.cloud:google-cloud-speech:$googleCloudSpeechVersion"
    implementation "com.google.cloud:google-cloud-language:$googleCloudNluVersion"
    implementation "com.google.cloud:google-cloud-texttospeech:$googleCloudTtsVersion"
    implementation "io.grpc:grpc-okhttp:$grpcVersion"
    implementation "io.grpc:grpc-stub:$grpcVersion"

    // dagger
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"

    // Dagger Android
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kaptTest "com.google.dagger:dagger-android-processor:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
}
